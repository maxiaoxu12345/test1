<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Sql的映射文件 -->
<mapper namespace="com.eccl.ssm.Mapper.EmployeeMapper">
	<resultMap type="com.eccl.ssm.Entity.Employee" id="getAllEmpsMap">
		<id column="e_id" property="eId"/>
		<result column="login_name" property="loginName"/>
		<result column="e_name" property="eName" />
		<result column="e_d_id" property="depart.dId" />
		<result column="d_name" property="depart.dName"/>
		<result column="roleName" property="eJobType" />
		<result column="managers_score" property="managersScore" />
		<result column="emps_score" property="empsScore" />
		<result column="other_score" property="otherScore" />
		<result column="e_pwd" property="pwd" />
		<result column="key_score" property="keyScore" />
		<result column="bussiness_score" property="bussinessScore" />
		<result column="final_score" property="finalScore" />
	</resultMap>
	<resultMap type="com.eccl.ssm.Entity.Depart" id="getAllDepartMap">
		<id column="d_id" property="dId"/>
		<result column="d_name" property="dName"/>
	</resultMap>
	<!--A -->
	<select id="getEmpsTestResult" resultMap="getAllEmpsMap">
		SELECT e_name,bussiness_score,managers_score,key_score,emps_score,other_score,final_score
		,d_name,d_id,e_job_type FROM eccl_emp, eccl_depart WHERE d_id=e_d_id AND e_job_type=3   ORDER BY d_name,final_score desc
	</select>
	<!--A public void editpwd(); -->
	<update id="editpwd" parameterType="Map">
		<foreach item="value" index="key" collection="umap" separator=";" >UPDATE eccl_emp SET e_pwd = #{value}  where
        login_name=#{key}</foreach>
	</update>
	<!-- A  public List<Employee> getEmpsByDepart(int departId); -->
	<select id="getEmpsByDepart" resultType="com.eccl.ssm.Entity.NewEmp" parameterType="String">
		SELECT e_name,d_name FROM eccl_emp e LEFT JOIN eccl_depart d ON e.e_d_id = d.d_id
		WHERE( e_job_type=3 AND e_d_id=(SELECT e_d_id FROM eccl_emp WHERE e_name =#{string}))
	</select>
	<select id="selectOneScore" resultType="Integer" >
		SELECT score FROM eccl_test WHERE NAME=#{name1} AND test_name=#{name2}
	</select>
<select id="selectOneScore2" resultType="Integer" >
		SELECT score FROM eccl_test WHERE NAME=#{name1} AND test_name=#{name2}
	</select>
	<!--A public List<NewEmp> getEmpsByDepartName(String departName);-->
	<select id="getEmpsByDepartName" resultType="com.eccl.ssm.Entity.NewEmp" parameterType="String">
		SELECT e_name,d_name,e_job_type FROM eccl_emp e LEFT JOIN eccl_depart d ON e.e_d_id
		= d.d_id WHERE d_name=#{d_name} and e_job_type=3
	</select>
	<!--A public List<Employee> goLogin(Map<String, String> empIn); -->
	<select id="goLogin" resultMap="getAllEmpsMap" parameterType="String">
		select e_id ,login_name, e_name, e_d_id,d.d_name as departName, r.r_name as roleName,e_pwd
		from eccl_emp e left join eccl_role r on e.e_job_type = r.r_id left join eccl_depart
		d on e.e_d_id = d.d_id
		<trim prefix="where">login_name=#{empName}</trim>
	</select>
	<!--A public List<Depart> getAllDepart(); -->
	<select id="getAllDepart" resultMap="getAllDepartMap">SELECT * FROM eccl_depart where d_id !=1 </select>
	
	<!--A  -->
	<select id="getAllDepartExcept" resultMap="getAllDepartMap">SELECT * FROM eccl_depart where  d_id !=1;</select>
	<!--A  -->
	<select id="getAllDepartExc" resultMap="getAllDepartMap">SELECT * FROM eccl_depart where  d_id !=1 and d_id!=#{int};</select>
	<!--A -->
	<select id="getDepartByName" resultType="Integer">SELECT e_d_id FROM eccl_emp where e_name=#{name} ;</select>
	<!--A -->
	<select id="getDepartByJobType" resultType="Integer">SELECT r_id FROM eccl_role where r_name=#{name};</select>
	
	<!--A public void saveScore(Map<String, Object> map); -->
	<insert id="saveScore" parameterType="Map">
		insert into eccl_test(name,test_name,score,date,job_type,depart_id) VALUES (#{name},#{username},#{score},#{date},#{jobType},#{e_d_id})
	</insert>
	<!--A public void updateScore(Map<String, Object> map); -->
	<update id="updateScore" parameterType="Map">
		update eccl_test set score = #{score} , date = #{date} where name=#{name} and test_name
		= #{username}
	</update>
	<!--A 建表 -->
	<insert id="InsertA" parameterType="String">insert into eccl_directortest (directorName,empName) values(#{c},#{d})</insert>
	<!--A-->
	<select id="getMap" resultType="com.eccl.ssm.Entity.NewEmp" parameterType="Map">SELECT e_name FROM eccl_emp  WHERE e_job_type=#{B}
	 	AND e_d_id=#{A}</select>
	<!--A public int isRecored(Map<String, Object> map); -->
	<select id="isRecored" resultType="int">
		SELECT count(*) as total from eccl_test where name=#{name} and test_name = #{username}
	</select>
	<!--A public List<Employee> getOwnEmps(int getdId); -->
	<select id="getOwnEmps"  resultMap="getAllEmpsMap">
		select e_id ,login_name, e_name, e_d_id,d.d_name as departName, r.r_name as roleName,e_pwd
		from eccl_emp e left join eccl_role r on e.e_job_type = r.r_id left join eccl_depart
		d on e.e_d_id = d.d_id where e_d_id = #{getdId} and e_job_type =3
	</select>
	<resultMap type="com.eccl.ssm.Entity.EmpScore" id="getEmpScoreMap">
		<id column="id" property="id"/>
		<result column="directorName" property="director"/>
		<result column="empName" property="empName"/>
		<result column="score_achievement" property="scoreAchievement"/>
		<result column="score_finish" property="scoreFinish"/>
		<result column="score_finance" property="scoreFinance"/>
		<result column="score_hygiene" property="scoreHygiene"/>
		<result column="score_attendance" property="scoreAttendance"/>
		<result column="score_behavior" property="scoreBehavior"/>
		<result column="score_plan" property="scorePlan"/>
		<result column="score_contribution" property="scoreContribution"/>
		<result column="score_fault" property="scoreFault"/>
		<result column="score_ontime" property="scoreOntime"/>
		<result column="score_add" property="scoreAdd"/>
		<result column="score_sub" property="scoreSub"/>
	</resultMap>
	<!--A public Employee getEmpScore(String empName); -->
	<select id="getEmpScore" resultMap="getEmpScoreMap">SELECT * FROM eccl_directortest
		where empName=#{name} and directorName=#{director};</select>
		<select id="selectAllEmpName" resultType="String">	 SELECT  DISTINCT NAME FROM eccl_test
</select>
		<select id="selectAllEs" resultType="String">	 SELECT  empName FROM eccl_directortest
</select>
		<select id="iskey" resultType="int">SELECT count(*) FROM eccl_directortest
		where empName=#{ename} and directorName=#{dname};</select>
	<!--A public void saveScoreRecord(EmpScore empScore); -->
	<update id="saveScoreRecord">
		update eccl_directortest set score_achievement=#{scoreAchievement}, score_finish=#{scoreFinish},
		score_finance=#{scoreFinance}, score_hygiene=#{scoreHygiene}, score_attendance=#{scoreAttendance},
		score_behavior=#{scoreBehavior}, score_plan=#{scorePlan}, score_contribution=#{scoreContribution},
		score_fault=#{scoreFault}, score_ontime=#{scoreOntime}, score_add=#{scoreAdd}, score_sub=#{scoreSub}
		where directorName=#{director} and empName=#{empName}
	</update>
	<insert id="insertScoreRecord">
		INSERT INTO  eccl_directortest (directorName,empName, score_achievement,score_finish,score_finance,score_hygiene
,score_attendance,score_behavior,score_plan,score_contribution,score_fault,score_ontime,score_add,score_sub) VALUES (
	#{director},#{empName},#{scoreAchievement}, #{scoreFinish},
		#{scoreFinance}, #{scoreHygiene}, #{scoreAttendance},
		#{scoreBehavior}, #{scorePlan}, #{scoreContribution},
		#{scoreFault}, #{scoreOntime}, #{scoreAdd}, #{scoreSub})
	</insert>
	<!-- A -->
	
	<update id="updateEmps" parameterType="String">
		UPDATE eccl_emp SET 
	bussiness_score = ( 
		(SELECT AVG(score_achievement) FROM eccl_directortest WHERE empName=#{empName})
				*0.36 + 
		(SELECT AVG(score_finish) FROM eccl_directortest WHERE empName=#{empName})
				*0.24 ),
	managers_score = ( 
		(SELECT AVG(score_finance) FROM eccl_directortest WHERE empName=#{empName})
				*0.1 +
		(SELECT AVG(score_hygiene) FROM eccl_directortest WHERE empName=#{empName})
				*0.1 + 
		(SELECT AVG(score_attendance) FROM eccl_directortest WHERE empName=#{empName})
				*0.15 + 
		(SELECT AVG(score_behavior) FROM eccl_directortest WHERE empName=#{empName})
				*0.1
		+ (SELECT AVG(score_plan) FROM eccl_directortest WHERE empName=#{empName})
				*0.1 +
		 (SELECT AVG(score_contribution) FROM eccl_directortest WHERE empName=#{empName})
				*0.15 + 
		(SELECT  AVG(score_fault) FROM eccl_directortest WHERE empName=#{empName})
				*0.15 +
		(SELECT AVG(score_ontime) FROM eccl_directortest WHERE empName=#{empName})
				*0.15 )
				*0.4,
		key_score=( (SELECT MAX(score_add) FROM eccl_directortest WHERE empName=#{empName})
		 +
		  (SELECT MIN(score_sub) FROM
		eccl_directortest WHERE empName=#{empName}) )
		 ,final_score=( bussiness_score+managers_score
		) WHERE e_name = #{empName}
	</update>
<select id="selectcount" resultType="int">
	SELECT COUNT(*) FROM eccl_test WHERE job_type IN(1,5) AND NAME=#{string}
	</select>
	<!--A-->
	<update id="updateEmpsScoreInEmps" parameterType="Map">
		UPDATE eccl_emp SET emps_score = #{sum4} WHERE e_name=#{name}
	</update>
	<!--A-->
	<update id="updateOtherScoreInEmps" parameterType="Map">
		UPDATE eccl_emp SET other_score = #{sum4} WHERE e_name=#{name}
	</update>
	<select id="selectScores" resultType="int">
	SELECT score FROM eccl_test WHERE job_type =3 AND NAME=#{string} ORDER BY score
	</select>
	<select id="selectOtherScores" resultType="int">
	SELECT score FROM eccl_test WHERE job_type in(1,5) AND NAME=#{string} ORDER BY score
	</select>
</mapper>
